import { NextRequest, NextResponse } from 'next/server';

// Conditional import for SendGrid to avoid build issues
let sgMail: any = null;
let sendGridAvailable = false;

try {
  sgMail = eval('require')('@sendgrid/mail');
  sendGridAvailable = true;
} catch (e) {
  console.warn('SendGrid not available - email functionality disabled');
  sendGridAvailable = false;
}

// Initialize SendGrid
if (sgMail && process.env.SENDGRID_API_KEY) {
  sgMail.setApiKey(process.env.SENDGRID_API_KEY);
}

export async function POST(request: NextRequest) {
  try {
    const { to, subject, content, contentType = 'chat', shareId } = await request.json();

    if (!to || !subject || !content) {
      return NextResponse.json(
        { error: 'Missing required fields: to, subject, content' },
        { status: 400 }
      );
    }

    if (!sendGridAvailable || !sgMail || !process.env.SENDGRID_API_KEY) {
      return NextResponse.json(
        { error: 'Email service not configured' },
        { status: 503 }
      );
    }

    // Create HTML content
    const htmlContent = generateEmailHTML(content, contentType, shareId);
    const textContent = generateEmailText(content);

    const msg = {
      to,
      from: process.env.FROM_EMAIL || 'noreply@getwyng.co',
      subject: `Wyng: ${subject}`,
      text: textContent,
      html: htmlContent,
    };

    await sgMail.send(msg);

    // Log the share action
    console.log('üìß Email shared:', { to, subject, contentType, shareId });

    return NextResponse.json({
      success: true,
      message: 'Email sent successfully'
    });

  } catch (error) {
    console.error('Error sending email:', error);
    return NextResponse.json(
      { error: 'Failed to send email' },
      { status: 500 }
    );
  }
}

function generateEmailHTML(content: any, contentType: string, shareId?: string): string {
  const timestamp = new Date().toLocaleDateString();

  return `
    <!DOCTYPE html>
    <html>
      <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Wyng - Your Healthcare Assistant</title>
        <style>
          body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 8px 8px 0 0; text-align: center; }
          .logo { font-size: 24px; font-weight: bold; margin-bottom: 5px; }
          .tagline { font-size: 14px; opacity: 0.9; }
          .content { background: #fff; padding: 30px; border: 1px solid #e5e7eb; border-radius: 0 0 8px 8px; }
          .question { background: #f8fafc; padding: 15px; border-left: 4px solid #667eea; margin-bottom: 20px; }
          .answer { margin-bottom: 20px; }
          .citations { background: #f9fafb; padding: 15px; border-radius: 6px; margin-top: 20px; }
          .citation { font-size: 12px; color: #6b7280; margin-bottom: 5px; }
          .next-steps { margin-top: 20px; }
          .step { background: #eff6ff; padding: 10px; margin: 5px 0; border-radius: 4px; }
          .footer { text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb; color: #6b7280; font-size: 12px; }
          .link { color: #667eea; text-decoration: none; }
          .disclaimer { background: #fef3cd; padding: 10px; border-radius: 4px; margin-top: 15px; font-size: 12px; }
        </style>
      </head>
      <body>
        <div class="header">
          <div class="logo">Wyng</div>
          <div class="tagline">Your Healthcare Guardian Angel</div>
        </div>

        <div class="content">
          ${contentType === 'chat' ? generateChatHTML(content) : generateAnalyzerHTML(content)}

          <div class="disclaimer">
            <strong>‚ö†Ô∏è Important:</strong> This information is for educational purposes only and should not be considered legal or medical advice. Always verify information with your insurance company and healthcare providers.
          </div>
        </div>

        <div class="footer">
          <p>Generated by Wyng on ${timestamp}</p>
          ${shareId ? `<p><a href="${process.env.NEXT_PUBLIC_BASE_URL}/share/${shareId}" class="link">View online</a></p>` : ''}
          <p>¬© 2024 Wyng. We never sell your data. Documents encrypted.</p>
        </div>
      </body>
    </html>
  `;
}

function generateChatHTML(content: any): string {
  return `
    ${content.question ? `<div class="question"><strong>Question:</strong> ${content.question}</div>` : ''}

    <div class="answer">
      <h3>Answer:</h3>
      ${content.answer.replace(/\n/g, '<br>')}
    </div>

    ${content.jargonExplanations && content.jargonExplanations.length > 0 ? `
      <div class="section">
        <h4>üìö Insurance Terms Explained:</h4>
        ${content.jargonExplanations.map((jargon: any) => `
          <div style="margin-bottom: 10px;">
            <strong>${jargon.term}:</strong> ${jargon.definition}
            ${jargon.example ? `<br><em>Example: ${jargon.example}</em>` : ''}
          </div>
        `).join('')}
      </div>
    ` : ''}

    ${content.nextSteps && content.nextSteps.length > 0 ? `
      <div class="next-steps">
        <h4>üìã Next Steps:</h4>
        ${content.nextSteps.map((step: string, index: number) => `
          <div class="step">${index + 1}. ${step}</div>
        `).join('')}
      </div>
    ` : ''}

    ${content.actionableLinks && content.actionableLinks.length > 0 ? `
      <div class="section">
        <h4>üîó Helpful Resources:</h4>
        ${content.actionableLinks.map((link: any) => `
          <div style="margin-bottom: 8px;">
            <a href="${link.url}" class="link" target="_blank">${link.text}</a>
            <br><small>${link.description}</small>
          </div>
        `).join('')}
      </div>
    ` : ''}

    ${content.citations && content.citations.length > 0 ? `
      <div class="citations">
        <h4>‚öñÔ∏è Sources:</h4>
        ${content.citations.map((citation: any) => `
          <div class="citation">${citation.authority} - ${citation.title}</div>
        `).join('')}
      </div>
    ` : ''}
  `;
}

function generateAnalyzerHTML(content: any): string {
  return `
    <div class="section">
      <h3>üìÑ Bill Analysis Results</h3>
      ${content.summary ? `<p>${content.summary}</p>` : ''}
    </div>

    ${content.findings && content.findings.length > 0 ? `
      <div class="section">
        <h4>üîç Findings:</h4>
        ${content.findings.map((finding: string) => `<div class="step">${finding}</div>`).join('')}
      </div>
    ` : ''}

    ${content.potential_savings ? `
      <div class="section">
        <h4>üí∞ Potential Savings: $${content.potential_savings}</h4>
      </div>
    ` : ''}

    ${content.next_steps && content.next_steps.length > 0 ? `
      <div class="next-steps">
        <h4>üìã Recommended Actions:</h4>
        ${content.next_steps.map((step: string, index: number) => `
          <div class="step">${index + 1}. ${step}</div>
        `).join('')}
      </div>
    ` : ''}
  `;
}

function generateEmailText(content: any): string {
  let text = 'WYNG - Your Healthcare Guardian Angel\n\n';

  if (content.question) {
    text += `Question: ${content.question}\n\n`;
  }

  text += `Answer: ${content.answer}\n\n`;

  if (content.nextSteps && content.nextSteps.length > 0) {
    text += 'Next Steps:\n';
    content.nextSteps.forEach((step: string, index: number) => {
      text += `${index + 1}. ${step}\n`;
    });
    text += '\n';
  }

  text += 'IMPORTANT: This information is for educational purposes only and should not be considered legal or medical advice.\n\n';
  text += `Generated by Wyng on ${new Date().toLocaleDateString()}\n`;
  text += '¬© 2024 Wyng. We never sell your data.';

  return text;
}